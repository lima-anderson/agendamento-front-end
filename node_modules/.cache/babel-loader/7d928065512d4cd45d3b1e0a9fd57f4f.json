{"ast":null,"code":"var _jsxFileName = \"/home/anderson/Documentos/front xo\\xE3o/front/src/components/Content/index.js\",\n    _s = $RefreshSig$();\n\nimport { AddIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport { Box, Button, Grid, HStack, IconButton, Menu, MenuButton, MenuItem, MenuList, Text, useDisclosure } from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { Form } from \"components/Form\";\nimport { Fragment, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Content() {\n  _s();\n\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const [initalValues, setInitalValues] = useState(null);\n  const [method, setMethod] = useState(\"\");\n  const [content, setContent] = useState();\n  const [updateTable, setUpdateTable] = useState(0);\n\n  function handleDelete(id) {\n    axios.delete(`http://localhost:3500/produtos/${id}`).then(() => setUpdateTable(state => state + 1));\n  }\n\n  useEffect(() => {\n    axios.get(\"http://localhost:3500/produtos\").then(response => setContent(response.data));\n  }, [updateTable]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      w: \"100%\",\n      color: \"black\",\n      p: \"60px\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => {\n          onOpen();\n          setInitalValues(null);\n          setMethod(\"criar\");\n        },\n        rightIcon: /*#__PURE__*/_jsxDEV(AddIcon, {\n          w: \"12px\",\n          h: \"12px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 22\n        }, this),\n        children: \"Novo Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        bg: \"transparent\",\n        gap: \"20px\",\n        color: \"black\",\n        p: \"30px 50px\",\n        templateColumns: \"repeat(6, 1fr)\",\n        borderRadius: \"20px\",\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          children: \"id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Nome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Senha\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: \"Curso\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          mx: \"auto\",\n          children: \"Op\\xE7\\xF5es\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), Array.isArray(content) ? content.map((item, index) => {\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              children: item.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: item.nome\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: item.senha\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              children: item.curso\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(HStack, {\n              justifyContent: \"center\",\n              spacing: \"10px\",\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => {\n                  onOpen();\n                  setInitalValues(item);\n                  setMethod(\"editar\");\n                },\n                bg: \"transparent\",\n                _hover: {\n                  color: \"black\",\n                  bg: \"gray.200\"\n                },\n                icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleDelete(item.id),\n                bg: \"transparent\",\n                _hover: {\n                  color: \"black\",\n                  bg: \"gray.200\"\n                },\n                icon: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 31\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 21\n            }, this)]\n          }, `${item.id}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 19\n          }, this);\n        }) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), isOpen ? /*#__PURE__*/_jsxDEV(Form, {\n      initalValues: initalValues,\n      isOpen: isOpen,\n      onClose: onClose,\n      method: method,\n      setUpdateTable: setUpdateTable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n} // {\n//     \"id\": 1,\n//     \"nome\": \"Toner\",\n//     \"email\": \"toner@mail.com\",\n//     \"senha\": \"123456\",\n//     \"curso\": \"letras\"\n//   },\n\n_s(Content, \"wCC/SDvMt+1NDQDMwPm2fgbiISw=\", false, function () {\n  return [useDisclosure];\n});\n\n_c = Content;\n\nvar _c;\n\n$RefreshReg$(_c, \"Content\");","map":{"version":3,"sources":["/home/anderson/Documentos/front xo√£o/front/src/components/Content/index.js"],"names":["AddIcon","DeleteIcon","EditIcon","Box","Button","Grid","HStack","IconButton","Menu","MenuButton","MenuItem","MenuList","Text","useDisclosure","axios","Form","Fragment","useEffect","useState","Content","isOpen","onOpen","onClose","initalValues","setInitalValues","method","setMethod","content","setContent","updateTable","setUpdateTable","handleDelete","id","delete","then","state","get","response","data","Array","isArray","map","item","index","nome","email","senha","curso","color","bg"],"mappings":"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","sourcesContent":["import { AddIcon, DeleteIcon, EditIcon } from \"@chakra-ui/icons\";\nimport {\n  Box,\n  Button,\n  Grid,\n  HStack,\n  IconButton,\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuList,\n  Text,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { Form } from \"components/Form\";\nimport { Fragment, useEffect, useState } from \"react\";\n\nexport function Content() {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [initalValues, setInitalValues] = useState(null);\n  const [method, setMethod] = useState(\"\");\n  const [content, setContent] = useState();\n  const [updateTable, setUpdateTable] = useState(0);\n\n  function handleDelete(id) {\n    axios\n      .delete(`http://localhost:3500/produtos/${id}`)\n      .then(() => setUpdateTable((state) => state + 1));\n  }\n\n  useEffect(() => {\n    axios\n      .get(\"http://localhost:3500/produtos\")\n      .then((response) => setContent(response.data));\n  }, [updateTable]);\n\n  return (\n    <>\n      <Box w=\"100%\" color=\"black\" p=\"60px\">\n        <Button\n          onClick={() => {\n            onOpen();\n            setInitalValues(null);\n            setMethod(\"criar\");\n          }}\n          rightIcon={<AddIcon w=\"12px\" h=\"12px\" />}\n        >\n          Novo Cadastro\n        </Button>\n        <Grid\n          bg=\"transparent\"\n          gap=\"20px\"\n          color=\"black\"\n          p=\"30px 50px\"\n          templateColumns=\"repeat(6, 1fr)\"\n          borderRadius=\"20px\"\n        >\n          <Text>id</Text>\n          <Text>Nome</Text>\n          <Text>Email</Text>\n          <Text>Senha</Text>\n          <Text>Curso</Text>\n          <Text mx=\"auto\">Op√ß√µes</Text>\n          {Array.isArray(content)\n            ? content.map((item, index) => {\n                return (\n                  <Fragment key={`${item.id}`}>\n                    <Text>{item.id}</Text>\n                    <Text>{item.nome}</Text>\n                    <Text>{item.email}</Text>\n                    <Text>{item.senha}</Text>\n                    <Text>{item.curso}</Text>\n                    <HStack justifyContent=\"center\" spacing=\"10px\">\n                      <IconButton\n                        onClick={() => {\n                          onOpen();\n                          setInitalValues(item);\n                          setMethod(\"editar\");\n                        }}\n                        bg=\"transparent\"\n                        _hover={{ color: \"black\", bg: \"gray.200\" }}\n                        icon={<EditIcon />}\n                      />\n                      <IconButton\n                        onClick={() => handleDelete(item.id)}\n                        bg=\"transparent\"\n                        _hover={{ color: \"black\", bg: \"gray.200\" }}\n                        icon={<DeleteIcon />}\n                      />\n                    </HStack>\n                  </Fragment>\n                );\n              })\n            : null}\n        </Grid>\n      </Box>\n      {isOpen ? (\n        <Form\n          initalValues={initalValues}\n          isOpen={isOpen}\n          onClose={onClose}\n          method={method}\n          setUpdateTable={setUpdateTable}\n        />\n      ) : null}\n    </>\n  );\n}\n// {\n//     \"id\": 1,\n//     \"nome\": \"Toner\",\n//     \"email\": \"toner@mail.com\",\n//     \"senha\": \"123456\",\n//     \"curso\": \"letras\"\n//   },\n"]},"metadata":{},"sourceType":"module"}